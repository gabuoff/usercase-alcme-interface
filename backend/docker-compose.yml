version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: rootuser
      MONGO_INITDB_ROOT_PASSWORD: rootpass
      MONGO_INITDB_DATABASE: clientela
    command: ["--auth"]

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: rootuser
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpass
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_OPTIONS: '{"useUnifiedTopology": true}'
      ME_CONFIG_MONGODB_SERVER_SELECTION_TIMEOUT_MS: 5000
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_AUTH_USERNAME: rootuser
      ME_CONFIG_MONGODB_AUTH_PASSWORD: rootpass
      

  sonarqube:
    image: sonarqube
    container_name: sonarqube
    ports:
      - 9000:9000
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
    networks:
      - default
    depends_on:
      - sonarqube-db

  sonarqube-db:
    image: postgres
    container_name: sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube-db:/var/lib/postgresql/data
    networks:
      - default

volumes:
  data: {}
  sonarqube-db: {}

networks:
  default:
    name: mongo-network
